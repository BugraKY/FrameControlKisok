@{
    ViewData["Title"] = "Print";
    var detailLength = @Model.ReportDetails!.Count;
    var rowLength = detailLength / 2;
    var OK = Model.ReportDetails.Where(x => x.Ok).Select(x => x.Definition!.Control).ToList();
    var NOK = Model.ReportDetails.Where(x => !x.Ok).Select(x => x.Definition!.Control).ToList();
    /*
    var NOK_front = Model.CoordinateCheck!.Where(i => i.Coordinate!.ImageType == 1).ToList();
    var NOK_rear = Model.CoordinateCheck!.Where(i => i.Coordinate!.ImageType == 2).ToList();
    */

    var NOK_front = Model.CoordinateCheck!
     .Where(i => i.Coordinate!.ImageType == 1)
     .GroupBy(i => i.ReportDetailId)
     .Select(g => g.First())
     .ToList();



    var NOK_rear = Model.CoordinateCheck!
        .Where(i => i.Coordinate!.ImageType == 2)
        .GroupBy(i => i.ReportDetailId)
        .Select(g => g.First())
        .ToList();



    //var reportDetails = Model.ReportDetails.OrderBy(x => x.Definition.Station.StationNum).OrderBy(x => x.DefinitionLine).ToList();
    var reportDetails = Model.ReportDetails.OrderBy(x => x.Id).ToList();
    /*
       var NOK_front = Model.CoordinateCheck!
         .Where(i => i.Coordinate!.ImageType == 1)
         .GroupBy(i => i.ReportDetailId)
         .Select(g => g.First().ReportDetail!.Definition!.Control!.Id)
         .ToList();

       var NOK_rear = Model.CoordinateCheck!
     .Where(i => i.Coordinate!.ImageType == 2)
     .GroupBy(i => i.ReportDetailId)
     .Select(g => g.First().ReportDetail!.Definition!.Control!.Id)
     .ToList();
     */
    var NOKofCoords = Model.CoordinateCheck!.ToList();
    var dataNum = 0;


}
@model FrameControlKiosk.Models.ReportMain

<style>
    .mark_saved_sm {
        position: absolute;
        width: 15px;
        height: 15px;
        border-radius: 50%;
        /*border: 2px dashed red;*/
        border: 2px dashed white;
        outline: dashed black;
        /*box-shadow: 0 0 0 2px black;*/
        cursor: pointer;
        opacity: 0;
        transition: opacity 0.3s;
    }

    .mark_unsaved_sm {
        position: absolute;
        width: 15px;
        height: 15px;
        border-radius: 50%;
        border: 2px dashed blue;
        cursor: pointer;
        opacity: 0;
        transition: opacity 0.3s;
    }

    .mark_saved_med {
        position: absolute;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        /*border: 4px dashed red;*/
        border: 4px dashed white;
        /*box-shadow: 0 0 0 4px black;*/
        cursor: pointer;
        opacity: 0;
        transition: opacity 0.3s;
    }

    .mark_unsaved_med {
        position: absolute;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        border: 4px dashed blue;
        cursor: pointer;
        opacity: 0;
        transition: opacity 0.3s;
    }

    .mark_saved_lr {
        position: absolute;
        width: 45px;
        height: 45px;
        border-radius: 50%;
        /*border: 4px dashed red;*/
        border: 4px dashed white;
        /*box-shadow: 0 0 0 4px black;*/
        cursor: pointer;
        opacity: 0;
        transition: opacity 0.3s;
    }

    .mark_unsaved_lr {
        position: absolute;
        width: 45px;
        height: 45px;
        border-radius: 50%;
        border: 4px dashed blue;
        cursor: pointer;
        opacity: 0;
        transition: opacity 0.3s;
    }

    .vertical-text-front {
        transform: rotate(-90deg);
        /*transform-origin: left bottom;*/
        white-space: nowrap;
        /*height: 100%;*/
        display: flex;
        align-items: center;
        position: absolute;
        top: 25%;
        left: 0;
        margin-left: -15px;
        font-size: 16px;
        z-index: 900;
        /*justify-content: center;*/
    }

    .vertical-text-rear {
        transform: rotate(-90deg);
        /*transform-origin: left bottom;*/
        white-space: nowrap;
        /*height: 100%;*/
        display: flex;
        align-items: center;
        position: absolute;
        top: 75%;
        left: 0;
        margin-left: -20px;
        font-size: 16px;
        z-index: 900;
        /*justify-content: center;*/
    }

    .loading-container {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: var(--main-bg-color);
        height: 100%;
        width: 100%;
        position: absolute;
        left: 0;
        top: 0;
        z-index: 9999;
    }

    #loader {
        background-image: url('/loader.png');
        background-size: cover;
        width: 100px;
        height: 100px;
        animation: spin 2s linear infinite;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .loading-container h3 {
        margin-top: 200px;
        text-align: center;
        position: absolute;
    }

    img {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
    }

    #front-image-container {
        position: relative;
    }

    .drawCanvas {
        position: absolute;
        /*z-index:2;*/
    }

    .table-bordered {
        border-collapse: collapse; /* Tablodaki çizgilerin bitişik olmasını sağlar */
    }

        .table-bordered td, .table-bordered th {
            border: 1px solid black;
        }

    .first-table td:last-child, .first-table th:last-child,
    .second-table td:first-child, .second-table th:first-child {
        border-right: none;
        /*border-left: none; */
    }

    .first-table tr td:last-child, .second-table tr td:first-child {
        border-width: 1px; /* Çizgi kalınlığını 1px olarak ayarla */
    }

    .flex-nowrap {
        display: flex;
        flex-wrap: nowrap;
    }

    .p-0 {
        padding: 0 !important;
    }

    .m-0 {
        margin: 0 !important;
    }

    .table {
        margin-bottom: 0 !important;
    }

        .table th, .table td {
            border: 1px solid black;
            vertical-align: middle;
            padding: 1px; /* İç boşlukları ayarlayarak tablo hücrelerini düzenleyin */
        }

    .title_rew {
        padding: 0 !important;
        height: 20px !important;
        text-align: center !important;
        font-weight: 900;
    }
    /*
                            .grayscale {
                                filter: grayscale(100%);
                            }*/
    table td,
    table td tr,
    table td div {
        margin-top: 1px !important;
        margin-bottom: 1px !important;
        padding-top: 1px !important;
        padding-bottom: 1px !important; /* Satır yüksekliğini azalt */
        line-height: 1 !important;
    }

    td p {
        margin: 0 !important; /* Margin değerini sıfırlar */
        padding: 0 !important; /* Padding değerini sıfırlar */
    }

    .rotate-table {
        transform: rotate(90deg);
        width: 297mm;
        margin-left: -120px;
    }

    @@media print {
        body {
            margin: 0;
            padding: 0;
            page-break-after: avoid;
            page-break-before: avoid;
            page-break-inside: avoid;
        }

        .container {
            width: auto;
            padding: 0;
        }

        .row {
            width: 100%;
            margin: 0;
        }

        .col-md-6 {
            width: 50%;
            float: left;
            padding: 0 10mm; /* Sağ ve sol padding'i ayarlayarak içeriği A4 sayfasına sığdırın */
        }

        .numberElement {
            /*
                                    color: white;
                                    text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                                    */
            /*
                                    color: white;
                                    border: 1px solid black;
                                    padding: 2px;
                                    */
        }

        .table-bordered {
            width: 100%;
            max-width: 100%;
            margin-bottom: 0;
        }

        .table {
            border-collapse: collapse;
            font-size: 8px;
            font-weight: 900;
        }

            .table th, .table td {
                border: 1px solid black;
                vertical-align: middle;
                padding: 5px; /* İç boşlukları ayarlayarak tablo hücrelerini düzenleyin */
            }

            .table thead th {
                background-color: #eaeaea;
                color: #333;
                -webkit-print-color-adjust: exact;
                print-color-adjust: exact;
            }

        .page-break {
            page-break-after: always !important; /* Her .page-break elementinden sonra yeni bir sayfaya geçer */
        }

        .page-end,
        .page-end * {
            display: none !important; /* Yazdırma sırasında .page-end ve içindekileri gizle */
        }

        .landscape {
            width: 100%;
            height: 100%;
            margin: 0;
            page-break-before: always; /* Yeni sayfada başlat */
            transform: rotate(-90deg); /* Yatay döndür */
            transform-origin: bottom left; /* Döndürme nok*/
        }
        /*
                                                                                                                    .first-table td:last-child, .first-table th:last-child,
                                                                                                                    .second-table td:first-child, .second-table th:first-child {
                                                                                                                        border-right: none;
                                                                                                                        border-left: none;
                                                                                                                    }*/
        /* table td,
                                                                                    table td p,
                                                                                    table td tr,
                                                                                    table td tr p,
                                                                                    table td div {
                                                                                        margin-top: 0 !important;
                                                                                        margin-bottom: 0 !important;
                                                                                        padding-top: 0 !important;
                                                                                        padding-bottom: 0 !important;
                                                                                        line-height: 1 !important;
                                                                                    }*/
    }
</style>


<div id="printContent" style="max-width:1120px;">
    <!--style="max-width:1120px;"-->
    @*<div style="padding-top:63px;"></div>*@

    <div class="row">
        <div class="col">
            <div class="text-center" style="font-weight:900;font-size: 12px;">
                @Model.Component!.Part KAPLAMA ÖNCESİ KONTROL TAKİP ÇİZELGESİ
            </div>
        </div>
    </div>
    <div style="border: 1px solid black; font-weight:900;font-size: 8px;">
        <div class="row">
            <div class="col-1">
                <div>Parça No:</div>
            </div>
            <div class="col-3">
                <div>@Model.FrameNo</div>
            </div>
            <div class="col-2">
                <div>Parça Adı:</div>
            </div>
            <div class="col-3">
                @Model.Component!.Part
            </div>
        </div>
        <div class="row">
            <div class="col-1">
                <div>Müşteri Adı:</div>
            </div>
            <div class="col-3">
                <div>SİRO</div>
            </div>
            <div class="col-2">
                <div>Tarih: </div>
            </div>
            <div class="col-3">
                @Model.StartingDate.ToString("dd/MM/yyyy")
            </div>
        </div>
    </div>

    <div class="row flex-nowrap">
        <div class="col-md-6 p-0">
            <!-- İlk tablo buraya -->
            <table class="table table-bordered first-table m-0">
                <tr>

                    <th colspan="3" class="text-center">Cooling Side</th>

                    @*<th></th>*@
                    <th>Uygun</th>
                    <th>Uygun Değil</th>
                </tr>
                @for (int i = 0; i < rowLength; i++)
                {
                    <tr>
                        <td class="text-center" style="vertical-align: middle;">@reportDetails[i].Definition!.Station!.StationNum/@reportDetails[i].Definition!.Shift</td>
                        <td class="text-center">@reportDetails![i].Definition!.Control!.Title</td>
                        <td>@Html.Raw(@reportDetails![i].Definition!.Control!.Text)</td>
                        @if (reportDetails![i].Ok)
                        {
                            <td class="text-center"><i class="fa fa-check" aria-hidden="true"></i></td>
                            <td></td>
                        }
                        else
                        {
                            <td></td>
                            <td class="text-center"><i class="fa-solid fa-x"></i></td>
                        }

                    </tr>
                }
            </table>
        </div>
        <div class="col-md-6 p-0">
            <!-- İkinci tablo buraya -->
            <table class="table table-bordered second-table m-0">
                <tr>
                    <th colspan="3" class="text-center">Bottom Cover</th>
                    @*<th></th>*@
                    <th>Uygun</th>
                    <th>Uygun Değil</th>
                </tr>
                @for (int i = rowLength; i < detailLength; i++)
                {


                    <tr>
                        <td class="text-center" style="vertical-align: middle;">@reportDetails[i].Definition!.Station!.StationNum/@reportDetails[i].Definition!.Shift</td>
                        <td class="text-center">@reportDetails![i].Definition!.Control!.Title</td>
                        <td>@Html.Raw(@reportDetails![i].Definition!.Control!.Text)</td>
                        @if (reportDetails![i].Ok)
                        {
                            <td class="text-center"><i class="fa fa-check" aria-hidden="true"></i></td>
                            <td></td>
                        }
                        else
                        {
                            <td></td>
                            <td class="text-center"><i class="fa-solid fa-x"></i></td>
                        }
                    </tr>
                }
            </table>
        </div>

    </div>

    <div class="col-12">
        <table class="table">
            <tr>
                <th style="width:133px;"></th>
                <th style="width:188px;" class="text-center">KONTROL EDEN CSL OPERATOR KAŞESİ</th>
                <th style="width:75px;"></th>
                <th class="text-center">KONTROL EDEN ÜRETİM</th>
            </tr>
            <tr>
                <th style="width:133px;"></th>
                <th style="width:188px;"></th>
                <th style="width:75px;"></th>
                <th></th>
            </tr>
        </table>
    </div>





    <div class="page-break"></div>
    <div style="margin-top:150px;"></div><!--margin-top:75px;--><!--margin-top:150px;-->
    <table class="table rotate-table">
        <tr>
            <th>COŞKUNÖZ</th>
            <th>@Model.FrameNo Nolu C FRAME GÖRÜNÜM KONTROL FORMU</th>
            <th colspan="2">LR_FRAME V6</th>
            <th colspan="3"></th>
        </tr>
        <tr class="title_rew">
            <th rowspan="10" colspan="2"><div class="vertical-text-front">ÖN YÜZ</div><div class="text-center" id="rear" style="min-width:1px;min-height:1px;"></div></th>
            <th class="title_rew"><span>HATA TESPİT</span></th>
            <th class="title_rew"><span>HATA TANIMI</span></th>
            <th class="title_rew"><span>AKSİYON TANIMI</span></th>
            <th class="title_rew"><span>REWORK YAPAN </span><br /><span>TARİH</span></th>
            <th class="title_rew"><span>FİNAL KONTROL</span></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_front.ElementAtOrDefault(0) != null ? NOK_front.ElementAtOrDefault(0)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-front="@dataNum" class="text-center">@(NOK_front.ElementAtOrDefault(0) != null ? +NOK_front.ElementAtOrDefault(0)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_front.ElementAtOrDefault(0)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_front.ElementAtOrDefault(0)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_front.ElementAtOrDefault(1) != null ? NOK_front.ElementAtOrDefault(1)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-front="@dataNum" class="text-center">@(NOK_front.ElementAtOrDefault(1) != null ? +NOK_front.ElementAtOrDefault(1)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_front.ElementAtOrDefault(1)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_front.ElementAtOrDefault(1)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_front.ElementAtOrDefault(2) != null ? NOK_front.ElementAtOrDefault(2)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-front="@dataNum" class="text-center">@(NOK_front.ElementAtOrDefault(2) != null ? +NOK_front.ElementAtOrDefault(2)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_front.ElementAtOrDefault(2)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_front.ElementAtOrDefault(2)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_front.ElementAtOrDefault(3) != null ? NOK_front.ElementAtOrDefault(3)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-front="@dataNum" class="text-center">@(NOK_front.ElementAtOrDefault(3) != null ? +NOK_front.ElementAtOrDefault(3)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_front.ElementAtOrDefault(3)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_front.ElementAtOrDefault(3)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_front.ElementAtOrDefault(4) != null ? NOK_front.ElementAtOrDefault(4)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-front="@dataNum" class="text-center">@(NOK_front.ElementAtOrDefault(4) != null ? +NOK_front.ElementAtOrDefault(4)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_front.ElementAtOrDefault(4)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_front.ElementAtOrDefault(4)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_front.ElementAtOrDefault(5) != null ? NOK_front.ElementAtOrDefault(5)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-front="@dataNum" class="text-center">@(NOK_front.ElementAtOrDefault(5) != null ? +NOK_front.ElementAtOrDefault(5)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_front.ElementAtOrDefault(5)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_front.ElementAtOrDefault(5)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_front.ElementAtOrDefault(6) != null ? NOK_front.ElementAtOrDefault(6)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-front="@dataNum" class="text-center">@(NOK_front.ElementAtOrDefault(6) != null ? +NOK_front.ElementAtOrDefault(6)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_front.ElementAtOrDefault(6)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_front.ElementAtOrDefault(6)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_front.ElementAtOrDefault(7) != null ? NOK_front.ElementAtOrDefault(7)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-front="@dataNum" class="text-center">@(NOK_front.ElementAtOrDefault(7) != null ? +NOK_front.ElementAtOrDefault(7)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_front.ElementAtOrDefault(7)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_front.ElementAtOrDefault(7)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_front.ElementAtOrDefault(8) != null ? NOK_front.ElementAtOrDefault(8)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-front="@dataNum" class="text-center">@(NOK_front.ElementAtOrDefault(8) != null ? +NOK_front.ElementAtOrDefault(8)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_front.ElementAtOrDefault(8)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_front.ElementAtOrDefault(8)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr class="title_rew">
            <th rowspan="10" colspan="2"><div class="vertical-text-rear">ARKA YÜZ</div><div class="text-center" id="front" style="min-width:1px;min-height:1px;"></div></th>
            <th class="title_rew"><span>HATA TESPİT</span></th>
            <th class="title_rew"><span>HATA TANIMI</span></th>
            <th class="title_rew"><span>AKSİYON TANIMI</span></th>
            <th class="title_rew"><span>REWORK YAPAN </span><br /><span>TARİH</span></th>
            <th class="title_rew"><span>FİNAL KONTROL</span></th>
        </tr>
        @{
            dataNum = NOK_rear.ElementAtOrDefault(0) != null ? NOK_rear.ElementAtOrDefault(0)!.ReportDetail!.Definition!.Control!.Id : 0;
        }
        <tr style="font-weight:300;">
            <th data-rear="@dataNum" class="text-center">@(NOK_rear.ElementAtOrDefault(0) != null ? +NOK_rear.ElementAtOrDefault(0)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_rear.ElementAtOrDefault(0)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_rear.ElementAtOrDefault(0)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        @{
            dataNum = NOK_rear.ElementAtOrDefault(1) != null ? NOK_rear.ElementAtOrDefault(1)!.ReportDetail!.Definition!.Control!.Id : 0;
        }
        <tr style="font-weight:300;">
            <th data-rear="@dataNum" class="text-center">@(NOK_rear.ElementAtOrDefault(1) != null ? +NOK_rear.ElementAtOrDefault(1)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_rear.ElementAtOrDefault(1)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_rear.ElementAtOrDefault(1)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_rear.ElementAtOrDefault(2) != null ? NOK_rear.ElementAtOrDefault(2)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-rear="@dataNum" class="text-center">@(NOK_rear.ElementAtOrDefault(2) != null ? +NOK_rear.ElementAtOrDefault(2)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_rear.ElementAtOrDefault(2)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_rear.ElementAtOrDefault(2)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_rear.ElementAtOrDefault(3) != null ? NOK_rear.ElementAtOrDefault(3)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-rear="@dataNum" class="text-center">@(NOK_rear.ElementAtOrDefault(3) != null ? +NOK_rear.ElementAtOrDefault(3)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_rear.ElementAtOrDefault(3)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_rear.ElementAtOrDefault(3)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_rear.ElementAtOrDefault(4) != null ? NOK_rear.ElementAtOrDefault(4)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-rear="@dataNum" class="text-center">@(NOK_rear.ElementAtOrDefault(4) != null ? +NOK_rear.ElementAtOrDefault(4)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_rear.ElementAtOrDefault(4)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_rear.ElementAtOrDefault(4)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_rear.ElementAtOrDefault(5) != null ? NOK_rear.ElementAtOrDefault(5)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-rear="@dataNum" class="text-center">@(NOK_rear.ElementAtOrDefault(5) != null ? +NOK_rear.ElementAtOrDefault(5)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_rear.ElementAtOrDefault(5)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_rear.ElementAtOrDefault(5)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_rear.ElementAtOrDefault(6) != null ? NOK_rear.ElementAtOrDefault(6)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-rear="@dataNum" class="text-center">@(NOK_rear.ElementAtOrDefault(6) != null ? +NOK_rear.ElementAtOrDefault(6)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_rear.ElementAtOrDefault(6)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_rear.ElementAtOrDefault(6)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_rear.ElementAtOrDefault(7) != null ? NOK_rear.ElementAtOrDefault(7)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-rear="@dataNum" class="text-center">@(NOK_rear.ElementAtOrDefault(7) != null ? +NOK_rear.ElementAtOrDefault(7)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_rear.ElementAtOrDefault(7)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_rear.ElementAtOrDefault(7)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            @{
                dataNum = NOK_rear.ElementAtOrDefault(8) != null ? NOK_rear.ElementAtOrDefault(8)!.ReportDetail!.Definition!.Control!.Id : 0;
            }
            <th data-rear="@dataNum" class="text-center">@(NOK_rear.ElementAtOrDefault(8) != null ? +NOK_rear.ElementAtOrDefault(8)!.ReportDetail!.Definition!.Control!.Id : "")</th>
            <th>
                @(NOK_rear.ElementAtOrDefault(8)?.ReportDetail!.Definition!.Control!.Title ?? "")<br />
                @(NOK_rear.ElementAtOrDefault(8)?.ReportDetail!.Description ?? "")
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </table>
</div>

<div class="page-end">
    <div class="modal" id="coordinateModal">
        <div class="modal-dialog modal-dialog-centered" style="max-width: 1400px;">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@Model.Component.Part</h5>
                    <button type="button" class="btn btn-danger close close" data-dismiss="modal" onclick="$('#coordinateModal').modal('hide');">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="row pl-2 pr-2">
                        <div class="col shadow" style="border: 1.5px solid #dee2e6; border-radius: 10px; padding:5px; margin-left:5px;">
                            <div class="row">
                                <div class="col-12 text-center">
                                    <div class="alert alert-danger shadow"><h4>ARKA YÜZ</h4></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <div id="rear-image-container" style="margin-top: 25px;">
                                        <canvas id="rearCanvas" style="margin-top: -25px;" class="drawCanvas" width="562" height="761"></canvas>
                                        <img src="~/assets/frame-check/@Model.ComponentId/rear.png?@DateTime.Now.Ticks" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-2 text-center">
                            <div style="border-left: 2px solid #dee2e6; height: 100%; margin-left: 50%; "></div>
                        </div>
                        <div class="col shadow" style="border: 1.5px solid #dee2e6;border-radius: 10px; padding:5px; margin-right:5px;">
                            <div class="row">
                                <div class="col-12 text-center">
                                    <div class="alert alert-danger shadow"><h4>ÖN YÜZ</h4></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <div id="front-image-container" style="height: 790px;">
                                        <canvas id="frontCanvas" class="drawCanvas" width="562" height="761"></canvas>
                                        <img src="~/assets/frame-check/@Model.ComponentId/front.png?@DateTime.Now.Ticks" style="width: 562px;min-width: 562px;min-height: 761px;height: 761px;" />
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    @*<button class="btn btn-danger" onclick="$('#printModal').modal('show');" disabled>YAZDIR</button>
                        <button class="btn btn-danger" onclick="$('#cancelModal').modal('show');" disabled>Bu Raporu İPTAL ET!</button>
                        <button class="btn btn-warning" onclick="cancelMarkers();" disabled>İşaretlenenleri İptal Et</button>
                        <button class="btn btn-success" onclick="sendBase64();" disabled>TEST (Base64)</button>
                        <button type="button" class="btn btn-primary applyButton" onclick="apply();" disabled>Uygula</button>*@
                    <button type="button" class="btn btn-primary" disabled>.</button>
                </div>
            </div>
        </div>
    </div>

    <div class="loading-container">
        <div id="loader"></div>
        <h3>Yazdırmak için hazırlanıyor. Lütfen bekleyiniz!</h3>
        <div class="col" style="bottom:39px;right:130px; position:absolute;"><button class="btn btn-success" style="float: right;" onclick="reConnect()"><i class="fas fa-fast-forward"></i> Yazdırmayı Atla</button></div>
    </div>


</div>



@*
    <button class="btn btn-secondary" onclick="$('#coordinateModal').modal('show');">TEST</button>
*@
@*
    <div class="modal" id="coordinateModal">
        <div class="modal-dialog modal-dialog-centered" style="max-width: 1400px;">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">FRAME C-SAMPLE</h5>
                    <button type="button" class="btn btn-danger close close" data-dismiss="modal" onclick="$('#coordinateModal').modal('hide');">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="row pl-2 pr-2">
                        <div class="col shadow" style="border: 1.5px solid #dee2e6; border-radius: 10px; padding:5px; margin-left:5px;">
                            <div class="row">
                                <div class="col-12 text-center">
                                    <div class="alert alert-danger shadow"><h4>ARKA YÜZ</h4></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <div id="rear-image-container">
                                        <img src="~/assets/frame-check/rear.png?@DateTime.Now.Ticks" style="width: 562px;min-width: 562px;min-height: 761px;height: 761px;" draggable="false" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-2 text-center">
                            <div style="border-left: 2px solid #dee2e6; height: 100%; margin-left: 50%; "></div>
                        </div>
                        <div class="col shadow" style="border: 1.5px solid #dee2e6;border-radius: 10px; padding:5px; margin-right:5px;">
                            <div class="row">
                                <div class="col-12 text-center">
                                    <div class="alert alert-danger shadow"><h4>ÖN YÜZ</h4></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <div id="front-image-container">
                                        <img src="~/assets/frame-check/front.png?@DateTime.Now.Ticks" style="width: 562px;min-width: 562px;min-height: 761px;height: 761px;" draggable="false" />
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
                <div class="modal-footer" style="height:62.5px;">

                </div>
            </div>
        </div>
    </div>
*@

<script src="~/lib/html2canvas/html2canvas.min.js"></script>
@section Scripts {
    <script>


    </script>
    <script>
        var coordinateChecks = [];
        var frontPictureBase64 = '';
        var rearPictureBase64 = '';

        let isFrontImageAdded = false;
        let isRearImageAdded = false;


        var frontNumbs = [];
        var rearNumbs = [];

        function printHTML() {
            // frontPictureBase64 ve rearPictureBase64 verilerini kullanarak img elementleri yarat
            if (!isFrontImageAdded) {
                var frontImage = new Image();
                frontImage.onload = function () {
                    document.getElementById("front").appendChild(frontImage);
                    isFrontImageAdded = true;
                    frontImage.style.transform = "rotate(90deg)";
                    frontImage.width = 300;
                    frontImage.height = 400;
                    // Her iki resim de yüklendiyse yazdırmayı tetikle
                    if (isRearImageAdded) {
                        //$('#coordinateModal').modal('hide');
                        //window.print();
                        //location.href = 'http://127.0.0.1';
                    }
                };
                //console.log("rearImage");
                console.log(frontPictureBase64);
                frontImage.src = frontPictureBase64;
            }

            if (!isRearImageAdded) {
                var rearImage = new Image();
                rearImage.onload = function () {
                    rearImage.style.transform = "rotate(-90deg)";
                    rearImage.width = 300;
                    rearImage.height = 400;

                    document.getElementById("rear").appendChild(rearImage);
                    isRearImageAdded = true;
                    // Her iki resim de yüklendiyse yazdırmayı tetikle
                    if (isFrontImageAdded) {
                        //$('#coordinateModal').modal('hide');
                        //window.print();
                        //location.href = 'http://127.0.0.1';
                    }
                };
                //console.log("frontImage");
                console.log(rearPictureBase64);
                rearImage.src = rearPictureBase64;
            }
        }
        function drawCoordinates(coordinates, ctx, number = '', imageType) {
            const points = coordinates.split(';').map(point => point.split(',').map(Number));
            if (points.length === 0 || points.some(point => point.length !== 2)) {
                return; // Koordinatlar geçerli değilse veya boşsa çizim yapma.
            }

            ctx.beginPath();

            points.forEach(([x, y], index) => {
                if (index === 0) {
                    ctx.moveTo(x, y);
                } else {
                    ctx.lineTo(x, y);
                }
            });


            ctx.fillStyle = 'white';
            ctx.strokeStyle = 'white';
            ctx.shadowColor = 'black';
            ctx.shadowBlur = 3;
            ctx.lineWidth = 4;
            //ctx.shadowOffsetX = 1;
            //ctx.shadowOffsetY = 1;

            /*
            ctx.strokeStyle = 'white';
            ctx.shadowColor = 'black';
            ctx.shadowBlur = 2;
            ctx.lineWidth = 2;*/

            ctx.stroke();

            if (number) {
                //En düşük ve en yüksek x ve y değerlerini bulmak

                const xs = points.map(point => point[0]);
                const ys = points.map(point => point[1]);
                const minX = Math.min(...xs);
                const maxX = Math.max(...xs);
                const minY = Math.min(...ys);
                const maxY = Math.max(...ys);

                // Merkez noktasını ve numaranın yazılacağı y koordinatını hesaplıyoruz
                const centerX = (minX + maxX) / 2;
                let textY = maxY + 10; // Numarayı çizimin hemen üstüne yerleştiriyoruz.
                ctx.font = '25px Arial';

                /*
                ctx.fillStyle = 'white';
                ctx.strokeStyle = 'black';
                ctx.shadowColor = 'black';
                ctx.shadowBlur = 2;
                ctx.shadowOffsetX = 1;
                ctx.shadowOffsetY = 1;*/



                //ctx.save();
                ctx.textAlign = 'bottom';
                ctx.textBaseline = 'top'; // Numaranın alt kenarı çizimin üstünde olsun.
                if (imageType === 2) {
                    textY = minY - 10;
                    ctx.translate(centerX, textY); // Merkez noktasına göre konumlandırıyoruz
                    ctx.rotate(Math.PI);
                    textY = 0; // Y koordinatını sıfırla, çünkü dönüşüm merkezi etrafında döndürüyoruz
                    ctx.fillText(number, 0, textY); // Dönüşüm uygulandığı için koordinatlar (0, 0) olacak
                }
                else
                    ctx.fillText(number, centerX, textY);
                ctx.restore(); // Çizim durumunu eski haline döndür
            }


        }


        function getCoordinates() {
            $.ajax({
                url: '/station/getCoords/' + '@Model.Id',
                type: 'post',
                contentType: "application/json",
                success: function (response) {
                    coordinateChecks = response;
                    createMarkers();
                    console.log(coordinateChecks);

                    //Sadece img elementleri siyah beyaza dönüştürüyoruz.
                    //$("#front-image-container img, #rear-image-container img").css("filter", "grayscale(100%)");
                    replaceImagesWithGrayscaleCanvases("#front-image-container");
                    replaceImagesWithGrayscaleCanvases("#rear-image-container");

                    // Ön canvas işlemi
                    html2canvas(document.getElementById("front-image-container")).then(function (canvas) {
                        //applyGrayscaleToCanvas(canvas);
                        console.log("Front");
                        canvas.style.width = "300px";
                        canvas.style.height = "400px";
                        canvas.style.transform = "rotate(-90deg)";
                        $('#rear').html(canvas);

                        // Arka canvas işlemi
                        return html2canvas(document.getElementById("rear-image-container"));
                    }).then(function (canvas) {
                        //applyGrayscaleToCanvas(canvas);
                        console.log("Rear");
                        canvas.style.width = "300px";
                        canvas.style.height = "400px";
                        canvas.style.transform = "rotate(90deg)";
                        $('#front').html(canvas);

                        $('#coordinateModal').modal('hide');

                        window.print();
                        location.href = 'http://127.0.0.1'; //BURASI KULLANILACAK!
                    });
                },
                error: function (error) {

                }
            });
        }


        function drawSaved(response) {
            // İki canvas için de çizim kontekstlerini önceden hazırlayın
            const frontCanvasCtx = document.getElementById('frontCanvas').getContext('2d');
            const rearCanvasCtx = document.getElementById('rearCanvas').getContext('2d');

            // Her iki canvas'ı da temizleyin
            frontCanvasCtx.clearRect(0, 0, frontCanvasCtx.canvas.width, frontCanvasCtx.canvas.height);
            rearCanvasCtx.clearRect(0, 0, rearCanvasCtx.canvas.width, rearCanvasCtx.canvas.height);

            // Çizim stillerini ayarlayın (opsiyonel, ihtiyaca göre değiştirilebilir)
            [frontCanvasCtx, rearCanvasCtx].forEach(ctx => {
                ctx.strokeStyle = 'white';
                ctx.shadowColor = 'black';
                ctx.shadowBlur = 2;
                ctx.lineWidth = 2;
            });

            // Her bir response öğesi için çizim yap
            response.forEach(item => {
                let ctx;
                if (item.imageType == 1) {
                    ctx = frontCanvasCtx;
                } else if (item.imageType == 2) {
                    ctx = rearCanvasCtx;
                } else {
                    return; // Eğer tanımlanmamış bir imageType varsa, çizim yapma
                }

                drawCoordinates(item.coordinates, ctx, item.number, item.imageType);
            });
        }
        function sendBase64() {
            console.log("base64 triggerd");

            html2canvas(document.getElementById("front-image-container")).then(canvas => {
                frontPictureBase64 = canvas.toDataURL();
            });
            html2canvas(document.getElementById("rear-image-container")).then(canvas => {
                rearPictureBase64 = canvas.toDataURL();
            });
        }
        function getDraw() {
            $.ajax({
                url: '/station/getDraws/' + '@Model.Id',
                type: 'post',
                contentType: "application/json",
                success: function (response) {
                    console.clear();
                    console.log("draw List");
                    console.log(response);
                    drawSaved(response);
                },
                error: function (error) {

                }
            });
            sendBase64();
        }
        /*
                                        function drawCoordinates(coordinates, ctx) {
                                            const points = coordinates.split(';');
                                            ctx.beginPath();

                                            points.forEach((point, index) => {
                                                const [x, y] = point.split(',').map(Number);
                                                if (index === 0) {
                                                    ctx.moveTo(x, y);
                                                } else {
                                                    ctx.lineTo(x, y);
                                                }
                                            });

                                            ctx.stroke();
                                        }*/
        function convertImageToGrayscaleCanvas(imgElement) {
            let canvas = document.createElement('canvas');
            let ctx = canvas.getContext('2d');
            canvas.width = imgElement.width;
            canvas.height = imgElement.height;

            // Resmi canvas'a çiz
            ctx.drawImage(imgElement, 0, 0, canvas.width, canvas.height);

            // Grayscale uygula
            let imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
            let data = imageData.data;
            for (let i = 0; i < data.length; i += 4) {
                let grayscale = data[i] * 0.3 + data[i + 1] * 0.59 + data[i + 2] * 0.11;
                data[i] = grayscale;     // kırmızı
                data[i + 1] = grayscale; // yeşil
                data[i + 2] = grayscale; // mavi
            }
            ctx.putImageData(imageData, 0, 0);

            return canvas;
        }

        function replaceImagesWithGrayscaleCanvases(containerSelector) {
            $(containerSelector + ' img').each(function () {
                let grayscaleCanvas = convertImageToGrayscaleCanvas(this);
                $(this).replaceWith(grayscaleCanvas);
            });
        }

        function createMarkers() {
            var countFront = 0;
            var countRear = 0;
            clearMarkers();
            console.log("markers triggerd");

            coordinateChecks.forEach(check => {
                let marker = document.createElement('div');
                marker.style.left = check.coordinate.x + 'px';
                marker.style.top = check.coordinate.y + 'px';
                marker.id = 'marker_' + check.coordinateId;
                marker.classList.add('marker');
                /*
                if (check.coordinate.imageType == "2" && check.coordinate.markSize == 1) {
                    marker.style.top = `calc(${check.coordinate.y}px + 13px)`;
                }*/
                // Başlangıçta işaretliyse, işareti göster

                if (check.marked) {
                    marker.style.opacity = 1;
                    if (check.coordinate.markSize == 1)
                        marker.classList.add('mark_saved_sm');
                    if (check.coordinate.markSize == 2)
                        marker.classList.add('mark_saved_med');
                    if (check.coordinate.markSize == 3)
                        marker.classList.add('mark_saved_lr');

                    console.log(check);


                    /*Numbers*/

                    if (check.coordinate.imageType == 1) {//front
                        console.log("Front");
                        var numberElement = document.createElement('div');
                        numberElement.textContent = check.reportDetail.definition.control.id;

                        numberElement.style.position = 'absolute';
                        if (check.coordinate.markSize == 1) {
                            numberElement.style.left = `calc(${check.coordinate.x}px + 5px)`;
                            numberElement.style.top = `calc(${check.coordinate.y}px + 17px)`;//13px
                        }
                        else if (check.coordinate.markSize == 2) {
                            numberElement.style.left = `calc(${check.coordinate.x}px + 11px)`;
                            numberElement.style.top = `calc(${check.coordinate.y}px + 28px)`;
                        }
                        else if (check.coordinate.markSize == 3) {
                            numberElement.style.left = `calc(${check.coordinate.x}px + 19px)`;
                            numberElement.style.top = `calc(${check.coordinate.y}px + 43px)`;
                        }

                        numberElement.style.opacity = 1;
                        numberElement.style.fontWeight = 900;
                        numberElement.style.fontSize = "18px";

                        numberElement.style.color = "white";
                        numberElement.style.textShadow = "-1.5px -1.5px 0 #000, 1.5px -1.5px 0 #000, -1.5px 1.5px 0 #000, 1.5px 1.5px 0 #000";
                        console.log(numberElement);
                        countFront++;
                        document.getElementById('front-image-container').appendChild(numberElement);

                    }
                    else if (check.coordinate.imageType == 2) {//rear
                        console.log("Rear");
                        var numberElement = document.createElement('div');
                        numberElement.textContent = check.reportDetail.definition.control.id;


                        numberElement.style.position = 'absolute';
                        if (check.coordinate.markSize == 1) {
                            numberElement.style.left = `calc(${check.coordinate.x}px + 5px)`;
                            numberElement.style.top = `calc(${check.coordinate.y}px - 25px)`;
                        }
                        else if (check.coordinate.markSize == 2) {
                            numberElement.style.left = `calc(${check.coordinate.x}px + 11px)`;
                            numberElement.style.top = `calc(${check.coordinate.y}px - 36px)`;
                        }
                        else if (check.coordinate.markSize == 3) {
                            numberElement.style.left = `calc(${check.coordinate.x}px + 19px)`;
                            numberElement.style.top = `calc(${check.coordinate.y}px - 49px)`;
                        }
                        numberElement.style.transform = "rotate(180deg)";
                        numberElement.style.opacity = 1;
                        numberElement.style.fontWeight = 900;
                        numberElement.style.fontSize = "18px";

                        numberElement.style.color = "white";
                        numberElement.style.textShadow = "-1.5px -1.5px 0 #000, 1.5px -1.5px 0 #000, -1.5px 1.5px 0 #000, 1.5px 1.5px 0 #000";

                        countRear++;
                        document.getElementById('rear-image-container').appendChild(numberElement);
                    }


                    console.log(frontNumbs);
                    console.log(rearNumbs);

                }
                else {
                    if (check.coordinate.markSize == 1)
                        marker.classList.add('mark_unsaved_sm');
                    if (check.coordinate.markSize == 2)
                        marker.classList.add('mark_unsaved_med');
                    if (check.coordinate.markSize == 3)
                        marker.classList.add('mark_unsaved_lr');
                }

                if (check.coordinate.imageType == "1")
                    document.getElementById('front-image-container').appendChild(marker);
                else if (check.coordinate.imageType == "2")
                    document.getElementById('rear-image-container').appendChild(marker);


                // Tıklama
                /*
                marker.addEventListener('click', function () {
                    if (!check.saved) {
                        check.marked = !check.marked; // 'marked' değerini değiştir
                        this.style.opacity = check.marked ? 1 : 0; // Opaklığı ayarla
                    }
                    else {
                        $.toast({
                            heading: 'Kaydedilmiş işaretleri değiştiremezsiniz!',
                            showHideTransition: 'slide',
                            textColor: '#eee',
                            icon: 'info',
                            loader: false,
                            hideAfter: 5000,
                            //bgColor: '#39A7FF',
                            bgColor: '#333',
                            position: 'bottom-center'
                        })
                    }

                });

                */
            });

        }
        function clearMarkers() {
            const markers = document.querySelectorAll('.marker');
            markers.forEach(marker => marker.parentNode.removeChild(marker));
        }

        $(document).ready(function () {

            var maxHeights = [];


            // frontNumbs için verileri oku ve ekle
            document.querySelectorAll('[data-front]').forEach(function (element) {
                if (element.getAttribute('data-front') != "0") {
                    frontNumbs.push(element.getAttribute('data-front'));
                }
            });

            // rearNumbs için verileri oku ve ekle
            document.querySelectorAll('[data-rear]').forEach(function (element) {
                if (element.getAttribute('data-rear') != "0") {
                    rearNumbs.push(element.getAttribute('data-rear'));
                }
            });


            $('.table tr').each(function (index) {
                var maxHeight = 0;
                var rows = $(`tr:nth-child(${index + 1})`, '.table');
                rows.each(function () {
                    maxHeight = Math.max(maxHeight, $(this).height());
                });
                maxHeights[index] = maxHeight;
            });

            $('.table tr').each(function (index) {
                $(`tr:nth-child(${index + 1})`, '.table').height(maxHeights[index]);
            });

            $('#coordinateModal').modal('show');


            getDraw();
            getCoordinates();

            /*
            setTimeout(function () {

            }, 500);*/



            // Tüm tr elementlerini seç
            var allRows = document.querySelectorAll("table tr");

            // Her bir row için kontrol et
            allRows.forEach(function (row) {
                // Eğer row'un tüm child elementleri boş ise yüksekliği ayarla
                if ([...row.children].every(child => child.textContent.trim() === "")) {
                    row.style.height = "10px";
                }
            });



        });
    </script>
}