// <auto-generated />
using System;
using FrameControlKiosk.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FrameControlKiosk.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240109141444_InitialMigration18")]
    partial class InitialMigration18
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FrameControlKiosk.Models.Component", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CustomerName")
                        .HasColumnType("text");

                    b.Property<string>("OperationArea")
                        .HasColumnType("text");

                    b.Property<string>("OperationTEL")
                        .HasColumnType("text");

                    b.Property<string>("Part")
                        .HasColumnType("text");

                    b.Property<string>("PartNo")
                        .HasColumnType("text");

                    b.Property<string>("Reference")
                        .HasColumnType("text");

                    b.Property<string>("RevDate")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Component");
                });

            modelBuilder.Entity("FrameControlKiosk.Models.Control", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Control");
                });

            modelBuilder.Entity("FrameControlKiosk.Models.Coordinate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ImageType")
                        .HasColumnType("integer");

                    b.Property<double>("X")
                        .HasColumnType("double precision");

                    b.Property<double>("Y")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Coordinate");
                });

            modelBuilder.Entity("FrameControlKiosk.Models.CoordinateCheck", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CoordinateId")
                        .HasColumnType("integer");

                    b.Property<bool>("Marked")
                        .HasColumnType("boolean");

                    b.Property<long>("ReportMainId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("CoordinateCheck");
                });

            modelBuilder.Entity("FrameControlKiosk.Models.Definition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ControlId")
                        .HasColumnType("integer");

                    b.Property<int>("DefinitionLine")
                        .HasColumnType("integer");

                    b.Property<bool>("Image")
                        .HasColumnType("boolean");

                    b.Property<string>("Shift")
                        .HasColumnType("text");

                    b.Property<int>("StationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Definition");
                });

            modelBuilder.Entity("FrameControlKiosk.Models.ReportDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("DefinitionId")
                        .HasColumnType("bigint");

                    b.Property<long>("DefinitionLine")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Ok")
                        .HasColumnType("boolean");

                    b.Property<long>("ReportMainId")
                        .HasColumnType("bigint");

                    b.Property<int>("StationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ReportDetail");
                });

            modelBuilder.Entity("FrameControlKiosk.Models.ReportMain", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Cancelled")
                        .HasColumnType("boolean");

                    b.Property<long>("ComponentId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Done")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("EndingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FrameNo")
                        .HasColumnType("text");

                    b.Property<int>("ProcessedLine")
                        .HasColumnType("integer");

                    b.Property<bool>("ProcessingDone")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ReportMain");
                });

            modelBuilder.Entity("FrameControlKiosk.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("HexColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsServer")
                        .HasColumnType("boolean");

                    b.Property<string>("Mac")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StationNum")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Station");
                });
#pragma warning restore 612, 618
        }
    }
}
